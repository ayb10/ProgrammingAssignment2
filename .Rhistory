part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in id)  {
nobs <- nrow(na.omit(read.csv(files[i])))
}
part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in id)  {
nobs <- nrow(na.omit(read.csv(files[i])))
}
part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", 1)
getwd()
list.files()
list.files("specdata")
swirl()
swirk
swirl
swirl()
swirl
install.packages(swirl)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
lenght()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
nv <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, ccollapse = " ")
paste(my_char, collapse "My" "name" "is")
paste(my_char, collapse = "My name is")
info(paste)
info
paste(my_char, collapse = )
paste(my_char, collapse = " ")
c(my_char, "Alysia")
my_name <- c(my_char, "Alysia")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nobs <- nrow(na.omit(read.csv(files[i])))
part2dat <- c(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nobs <- nrow(na.omit(read.csv(files[i])))
part2dat <- paste(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
complete <- na.omit(read.csv(files[i]))
nobs <- nrow(complete)
part2dat <- paste(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
complete <- na.omit(read.csv(files[i]))
nobs <- nrow(complete)
part2dat <- c(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
complete <- na.omit(read.csv(files[i]))
nobs <- nrow(complete[i])
part2dat <- (id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
complete <- na.omit(read.csv(files[i]))
nobs <- nrow(complete[i])
part2dat <- data.frame(id[i], nobs[i])
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
nrow(complete(id))
nrow(complete)
complete
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss[i])
part2dat <- data.frame(id[i], nobs[i])
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss[i])
part2dat <- data.frame(id[id], nobs[nobs])
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss[i])
part2dat <- cbind(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss)
part2dat <- cbind(id, nobs)
}
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss)
}
part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss)
}
part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss)
}
part2dat <- data.frame(id, nobs)
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
}
nobs <- nrow(nomiss)
part2dat <- data.frame(id, nobs)
part2dat
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
for (i in id)  {
nomiss <- na.omit(read.csv(files[i]))
nobs <- nrow(nomiss)
}
}
part2dat <- data.frame(id, nobs)
part2dat
complete("specdata", c(2, 4, 8, 10, 12))
swirl()
x <- c(33, NA, 5, NA)
x <- c(44, NA, 5, NA)
x *3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in id)  {
my_na <- is.na(read.csv([i]))
nobs <- sum(my_na)
}
}
part2dat <- cbind(id, nobs)
part2dat
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in id)  {
my_na <- is.na(read.csv([i]))
nobs <- sum(my_na)
}
part2dat <- cbind(id, nobs)
part2dat
}
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in id)  {
my_na <- is.na(read.csv([i]))
nobs <- sum(my_na)
}
}
part2dat <- cbind(id, nobs)
part2dat
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in 1:332)  {
my_na <- is.na(read.csv([i]))
nobs <- sum(my_na)
}
part2dat <- paste(id, nobs)
part2dat
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in 1:332)  {
my_na <- is.na(read.csv(files[i]))
nobs <- sum(my_na)
}
part2dat <- paste(id, nobs)
part2dat
}
complete("specdata", 1)
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names = TRUE)
part2dat <- data.frame()
for (i in 1:332)  {
my_na <- is.na(read.csv(files[i]))
nobs <- sum(my_na)
}
part2dat <- cbind(id, nobs)
part2dat
}
complete("specdata", 1)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y >0]
x[x . 0]
x[x > 0]
x[!is.na(x) & x >0]
x[3, 5, 7]
x[c(3, 5, 70]
x[c(3, 5, 70)]
x <- [c(3, 5, 7)]
info()
0
indexes[c(3, 5, 7)]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20, 4, 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
names <- c("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patents, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
str(apply)
str(lapply)
str(length)
str(apply)
str(rep)
gl()
?gl()
swirl)
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?split()
?lapply()
str(lapply)
?interaction()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
! 5 ==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xar(5 == 6, iFALSE)
xor(5 == 6, !FALISE)
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints)
which(ints > 7)
any(ints)
any(ints < 0)
any(ints > 0)
all(ints > 0)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
swirl()
Sys.date()
Sys.date()
Sys.Date()
mean(c(2, 4, 5))
boring_function <- function(x) {
x
}
boring_function(x)
submit()
boring_function('My first function!!')
boring_function('My first function!')
boring_function
submit()
submit(my_mean)
submit()
submit()
submit()
submit()
submit()
my_mean(my_vector)
my_mean()
my_mean
my_mean(c(4, 5, 10))
submit()
submit
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
ramainder(4, div = 2)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(std, c(1.4, 3.6, 7.9, 8.8))
evaluate (sd, c(1/4, 3.6,7.9, 8.8))
evaluate (sd, c(1.4, 3.6,7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x) {[1,1]})
evaluate(function(x) {[1,1]}, c(8, 4, 0))
evaluate(function(x) {x[1,1]}, c(8, 4, 0))
evaluate(function(x) {x[1]}, c(8, 4, 0))
evaluate(function(x) {x[3]}, c(8, 4, 0))
evaluate(function(x) {x[[3]]}, c(8, 4, 0))
info()
skip()
?paste
Paste("Programming", "is", "fun!")
paste("Programming", "is", "fun!")
submit)
submit()
telegram(hello)
telegram()
submit
submit()
submit()
submit()
submit()
submit()
submit()
mad_libs(San Jose, purple, flying pig statue )
mad_libs(Colorado, purple, pig)
mad_libs("Colorado", "purple", "pig")
submit()
submit
submit()
submit()
submit()
submit()
submit()
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
setwd("~/Documents/DataScience/Rprogramming/ProgrammingAssignment2")
getwd()
<<-
?<<-
m <- NULL
m
?NULL
?inv
??inv
INV()
?Inv
??Inv
solve()
mtest <- matrix(1:15, 3, 3)
mtest
source('~/Documents/DataScience/Rprogramming/ProgrammingAssignment2/cachematrix.R')
data <- x$get()
source('~/Documents/DataScience/Rprogramming/ProgrammingAssignment2/cachematrix.R')
source()
source('~/Documents/DataScience/Rprogramming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(mtest)
cacheSolve(mtest)
is.recursive(mtest)
solve()
?solve
cacheSolve(mtest,)
cacheSolve(mtest)
str(mtest)
mtest
class(mtest)
summary(mtest)
